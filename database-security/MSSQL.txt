-- THIS ARE MICROSOFT SQL SERVER DATABASE REVIEW SCRIPTS
-- This query checks if remote admin connections are enabled on a non-clustered server. 
-- CIS recommends disabling this feature to reduce the attack surface unless it's required for specific administration tasks.

USE master; 
GO 
SELECT name,  
 CAST(value as int) as value_configured, 
 CAST(value_in_use as int) as value_in_use 
FROM sys.configurations 
WHERE name = 'remote admin connections' 
AND SERVERPROPERTY('IsClustered') = 0;

-- This query identifies databases where the TRUSTWORTHY property is set to ON, excluding 'msdb'. 
-- Enabling TRUSTWORTHY can pose a security risk by allowing escalation of privileges. 
-- CIS recommends keeping this setting disabled unless there is a compelling need.

SELECT name 
FROM sys.databases 
WHERE is_trustworthy_on = 1 
AND name != 'msdb'; 

-- This query checks if the built-in administrator account (SID 0x01) is enabled. 
-- For security reasons, the built-in administrator account should be disabled or renamed to avoid unauthorized use.

SELECT name, is_disabled 
FROM sys.server_principals 
WHERE sid = 0x01 
AND is_disabled = 0;

-- This query lists the built-in administrator account. 
-- Renaming or disabling this account is a security best practice to prevent potential misuse.

SELECT name 
FROM sys.server_principals 
WHERE sid = 0x01;

-- This query reports orphaned users in a specified production database. 
-- Orphaned users are those not associated with a login, which can occur after a database restore. 
-- Cleaning up orphaned users is important for maintaining security and database integrity.

USE [<production_database_name>]; 
GO 
EXEC sp_change_users_login @Action='Report';

-- This query reviews permissions granted to the 'public' server role. 
-- Granting minimal permissions to 'public' follows the principle of least privilege, 
-- which is a key security practice to prevent unauthorized access to server resources.

SELECT *  
FROM master.sys.server_permissions 
WHERE (grantee_principal_id = SUSER_SID(N'public') and state_desc LIKE 
'GRANT%') 
AND NOT (state_desc = 'GRANT' and [permission_name] = 'VIEW ANY DATABASE' 
and class_desc = 'SERVER') 
AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and 
class_desc = 'ENDPOINT' and major_id = 2) 
AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and 
class_desc = 'ENDPOINT' and major_id = 3) 
AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and 
class_desc = 'ENDPOINT' and major_id = 4) 
AND NOT (state_desc = 'GRANT' and [permission_name] = 'CONNECT' and 
class_desc = 'ENDPOINT' and major_id = 5);

-- This query checks permissions assigned to server roles that start with 'BUILTIN'. 
-- It's important to regularly review these permissions to ensure they are appropriate and do not grant unnecessary access.

SELECT pr.[name], pe.[permission_name], pe.[state_desc] 
FROM sys.server_principals pr 
JOIN sys.server_permissions pe 
ON pr.principal_id = pe.grantee_principal_id 
WHERE pr.name like 'BUILTIN%';

-- This query reviews permissions for local Windows groups that are based on the server's machine name. 
-- Special attention should be given to groups with administrative privileges to ensure they are not overly permissive.

USE [master] 
GO 
SELECT pr.[name] AS LocalGroupName, pe.[permission_name], pe.[state_desc] 
FROM sys.server_principals pr 
JOIN sys.server_permissions pe 
ON pr.[principal_id] = pe.[grantee_principal_id] 
WHERE pr.[type_desc] = 'WINDOWS_GROUP' 
AND pr.[name] like CAST(SERVERPROPERTY('MachineName') AS nvarchar) + '%';

-- This query identifies SQL logins with the sysadmin role and checks if password expiration is enforced. 
-- Accounts with sysadmin privileges should have strong password policies, including expiration, to enhance security.

SELECT l.[name], 'sysadmin membership' AS 'Access_Method' 
FROM sys.sql_logins AS l 
WHERE IS_SRVROLEMEMBER('sysadmin',name) = 1 
AND l.is_expiration_checked <> 1 
UNION ALL 
SELECT l.[name], 'CONTROL SERVER' AS 'Access_Method' 
FROM sys.sql_logins AS l 
JOIN sys.server_permissions AS p 
ON l.principal_id = p.grantee_principal_id 
WHERE p.type = 'CL' AND p.state IN ('G', 'W') 
AND l.is_expiration_checked <> 1;  

-- This query checks if the default trace is enabled, which is a feature that provides a valuable source of information for diagnosing problems. 
-- However, access to trace files should be secured to prevent unauthorized users from viewing sensitive information.

SELECT name, 
      CAST(value as int) as value_configured, 
      CAST(value_in_use as int) as value_in_use 
      FROM sys.configurations 
      WHERE name = 'default trace enabled';

-- This query checks if the 'xp_cmdshell' extended stored procedure is enabled. 
-- 'xp_cmdshell' can execute operating system commands and should be disabled to prevent potential security vulnerabilities.

SELECT name, 
      CAST(value as int) as value_configured, 
      CAST(value_in_use as int) as value_in_use 
FROM sys.configurations 
WHERE name = 'xp_cmdshell';

-- This query retrieves all logins from the syslogins table for review. 
-- Regular auditing of logins helps ensure that only authorized users have access to the SQL Server.

select * from sys.syslogins

-- This query retrieves all SQL logins from the sql_logins table for review. 
-- It's important to audit SQL logins to manage access and maintain security.

select * from sys.sql_logins

-- This stored procedure shows the current server configuration options. 
-- Reviewing these settings helps ensure that the server is configured securely according to best practices.

sp_configure

-- This stored procedure lists members of the sysadmin server role. 
-- The sysadmin role has the highest level of privileges, and its membership should be restricted to essential personnel only.

sp_helpsrvrolemember 'sysadmin'

-- This stored procedure lists members of the serveradmin server role. 
-- The serveradmin role can configure server-wide settings, so its membership should be carefully controlled.

sp_helpsrvrolemember 'serveradmin'

-- This stored procedure lists members of the securityadmin server role.
-- The securityadmin role can manage server security, so its membership should be carefully controlled to prevent unauthorized changes to security settings.
sp_helpsrvrolemember 'securityadmin'

-- This stored procedure reviews all permissions granted and denied in the server.
-- Regularly auditing permissions helps to ensure that they are correctly assigned and that the principle of least privilege is being followed.

sp_helprotect

-- This query retrieves the installed service pack level and the version of SQL Server.
-- Keeping SQL Server up to date with the latest patches and versions is critical for security and should be part of regular maintenance.

SELECT SERVERPROPERTY('ProductLevel') as SP_installed,
SERVERPROPERTY('ProductVersion') as Version;

-- This query checks if Ad Hoc Distributed Queries are enabled, which allows the use of OPENROWSET and OPENDATASOURCE.
-- Enabling this feature can pose a security risk if not properly managed, so it should be disabled unless specifically required and carefully controlled.

SELECT name,  
 CAST(value as int) as value_configured, 
 CAST(value_in_use as int) as value_in_use 
FROM sys.configurations  
WHERE name = 'Ad Hoc Distributed Queries';

-- This query checks if CLR integration is enabled, which allows for the execution of .NET assemblies within SQL Server.
-- CLR integration should be enabled only if necessary and with caution, as it can increase the attack surface of the server.

SELECT name, 
      CAST(value as int) as value_configured, 
      CAST(value_in_use as int) as value_in_use 
FROM sys.configurations 
WHERE name = 'clr enabled';

-- This query lists all user-defined assemblies in a specified production database.
-- User-defined assemblies can introduce security risks if not properly reviewed and secured, so they should be audited regularly.

USE [<production_database_name>] 
GO 
SELECT name AS Assembly_Name, permission_set_desc 
FROM sys.assemblies 
WHERE is_user_defined = 1; 
GO

-- This query retrieves a list of database principals, which includes users, roles, and groups within the database.
-- Regularly reviewing database principals helps to ensure that access to the database is properly managed and secured.

select [sid],name 
from sys.database_principals

-- This query identifies database principals that are not mapped to server principals and are not system accounts.
-- Unmapped database principals can be a security concern, especially if they have been granted access unintentionally. They should be reviewed and managed appropriately.

select p.name,p.sid
from sys.database_principals p
where p.type in ('G','S','U')
and p.sid not in (select sid from sys.server_principals)
and p.name not in (
    'dbo',
    'guest',
    'INFORMATION_SCHEMA',
    'sys',
    '
